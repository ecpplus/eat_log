appname = "twitter_eat"
rails_root = "/srv/rails/twitter_eat_log"

(0..1).each do |port|
  God.watch do |w|
    w.name = "#{appname}-thin-#{port}"
    w.interval = 30.seconds # default
    w.start = "cd #{rails_root}; thin start -d -e production -l log/thin.#{port}.log -P tmp/pids/thin.#{port}.pid -S /tmp/thin.#{appname}.#{port}.sock"
    w.restart = "cd #{rails_root}; rm public/stylesheets/all.css; rm public/javascripts/all.js; thin restart -P tmp/pids/thin.#{appname}.#{port}.pid"
    w.stop = "cd #{rails_root}; rm public/stylesheets/all.css; rm public/javascripts/all.js; thin start -P tmp/pids/thin.#{appname}.#{port}.pid"
    w.start_grace = 3.seconds
    w.restart_grace = 3.seconds
    w.grace = 10.seconds
    w.pid_file = File.join(rails_root, "tmp/pids/thin.#{port}.pid")
    w.group = "Toryo"

    w.behavior(:clean_pid_file)

    w.start_if do |start|
      start.condition(:process_running) do |c|
        c.interval = 15.seconds
        c.running = false
      end
    end

    w.restart_if do |restart|
      restart.condition(:memory_usage) do |c|
        c.above = 150.megabytes
        c.times = [3, 5] # 3 out of 5 intervals
      end

      restart.condition(:cpu_usage) do |c|
        c.above = 50.percent
        c.times = 5
      end
    end

    # lifecycle
    w.lifecycle do |on|
      on.condition(:flapping) do |c|
        c.to_state = [:start, :restart]
        c.times = 5
        c.within = 5.minute
        c.transition = :unmonitored
        c.retry_in = 10.minutes
        c.retry_times = 5
        c.retry_within = 2.hours
      end
    end
  end
end

